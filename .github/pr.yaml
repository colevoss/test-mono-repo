name: Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        dirs: [service-one, service-two]

    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin ${{github.base_ref}}:${{github.base_ref}}

      - name: Check Git Diff Log
        run: |
          git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} services/${{ matrix.dirs }}

      - name: Check Git Diff
        id: git-check
        run: |
          echo ::set-output name=changed::$(if git diff --name-only --quiet origin/${{ github.base_ref }} ${{ github.sha }} services/${{ matrix.dirs }}; then echo "false"; else echo "true"; fi)

      - name: Do something
        if: steps.git-check.outputs.changed == 'true'
        run: echo "YEP CHANGED!"

      - name: Set Dir Variable
        if: steps.git-check.outputs.changed == 'true'
        run: |
          echo $GITHUB_REF

          export PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo $PR_NUMBER
          echo "::set-env name=SERVICE_DIR::services/${{ matrix.dirs }}"
          echo "::set-env name=PR_NUMBER::$PR_NUMBER"

      - name: Set Labels
        if: steps.git-check.outputs.changed == 'true'
        uses: actions/github-script@v2
        with:
          script: |
            console.log("${{ matrix.dirs }}");
            await github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ env.PR_NUMBER }},
              labels: ["${{matrix.dirs}}"]
            })

      - name: Deploy
        if: steps.git-check.outputs.changed == 'true'
        env:
          PORT: ${{ secrets.PORT }}
        run: |
          (echo "cat <<EOF"; cat ${{ env.SERVICE_DIR }}/service.yaml; echo "EOF";) | bash > ${{ env.SERVICE_DIR }}/service_ready.yaml
          cat ${{ env.SERVICE_DIR }}/service_ready.yaml

      - name: Test Deployment
        if: steps.git-check.outputs.changed == 'true'
        uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          previews: ant-man-preview
          script: |
            await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              description: "${{ matrix.dirs }}",
              transient_environment: true
            })
